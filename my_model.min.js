"use strict";
class Model {
    constructor(mount, initial) {
        this.modelContainer = new ObservableMap();
        this.db = document.querySelector(mount).querySelectorAll('[data-bind]');
        Array.from(this.db).forEach(el => {
            let bindTo = el.dataset['bind']
            if (el.type == "checkbox") {
                var val = 'checked';
                el.addEventListener('change', () => { this.set(bindTo, el[val]) }, false);
            } else var val = 'value';
            el.addEventListener('input', () => { this.set(bindTo, el[val]) }, false);
            this.subscribe((key, value) => {
                if (bindTo == key) {
                    if (el.tagName == "SPAN" || el.tagName == "TEXT") { el.innerHTML = value; return; }
                    el[val] = value;
                }
            });
            this.modelContainer.set(bindTo, eval(`initial.${bindTo}`))
        });
    }
    subscribe(fn) {
        this.modelContainer.subscribe(fn);
    }
    toObject() {
        this.obj={}
        for(var v of this.modelContainer){
           var objTmp = this.obj
          if (v[0].search('.') != -1) var keyArr = v[0].split('.')
          else { this.obj[v[0]] = v[1];}  
            for (var i = 0; i < keyArr.length; i++) {
             if(i==keyArr.length-1) objTmp[keyArr[i]] = v[1]
              if(!objTmp.hasOwnProperty(keyArr[i]))
                       objTmp[keyArr[i]] = {}
             objTmp=objTmp[keyArr[i]];
                    }
                }
        return this.obj;
    }
    set(key, value) {
        this.modelContainer.set(key, value);
    }
}